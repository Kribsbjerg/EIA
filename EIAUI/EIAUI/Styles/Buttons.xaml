<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:EIAUI">

    <ResourceDictionary.MergedDictionaries>
        <!-- Order is important -->
        <ResourceDictionary Source="Colours.xaml" />
        <ResourceDictionary Source="Fonts.xaml" />
    </ResourceDictionary.MergedDictionaries>
    
    <!-- Hoverless Button -->
    <Style TargetType="{x:Type Button}" x:Key="Hoverless">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <!-- System Icon Button -->
    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource Hoverless}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Padding" Value="10" />
    </Style>
    
    <!-- Window Control Button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowControlButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                        <TextBlock VerticalAlignment="Center" FontFamily="{StaticResource MaterialIcon}" FontSize="20"  HorizontalAlignment="Center" Text="{TemplateBinding Content}" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource BlueColorBrush}" />
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- Window close button -->
    <Style TargetType="{x:Type Button}" x:Key="WindowCloseButton" BasedOn="{StaticResource WindowControlButton}">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{StaticResource RedColorBrush}" />
                <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Approve button -->
    <Style TargetType="{x:Type Button}" x:Key="ApproveButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource TealColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="2">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" Opacity="0.4" />
                        </Border.Effect>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="{StaticResource LatoBlack}" FontSize="12" Text="GODKEND" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Contact button -->
    <Style TargetType="{x:Type Button}" x:Key="ContactButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource BackgroundColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="{StaticResource PrimaryColorBrush}" BorderThickness="1" CornerRadius="2">
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="{StaticResource MaterialIcon}" Text="&#xf207;" FontSize="13.4" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Pin button-->
    <Style TargetType="{x:Type Button}" x:Key="PinButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColorBrush}" />
        <Setter Property="BorderThickness" Value="0.3" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{StaticResource BackgroundColorBrush}" CornerRadius="2">
                        <Viewbox Width="32" Height="32" >
                            <Canvas x:Name="PinCanvas" Width="32" Height="32" >
                                <Grid HorizontalAlignment="Center" VerticalAlignment="Center" >
                                    <Path Data="M16,12V4H17V2H7V4H8V12L6,14V16H11.2V22H12.8V16H18V14L16,12Z" Fill="White" />
                                </Grid>
                            </Canvas>
                        </Viewbox>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Minimize visitation-->
    <Style TargetType="{x:Type Button}" x:Key="MinimizeVisitationButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColorBrush}" />
        <Setter Property="BorderThickness" Value="1" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderThickness="1" BorderBrush="{StaticResource BackgroundColorBrush}" CornerRadius="2">
                        <TextBlock FontFamily="{StaticResource MaterialIcon}" FontSize="10" Text="&#xf1eb;" HorizontalAlignment="Center" VerticalAlignment="Bottom"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Disapprove button-->
    <Style TargetType="{x:Type Button}" x:Key="DisapproveVisitationButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource RedColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="2">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" Opacity="0.4" />
                        </Border.Effect>
                        <TextBlock FontFamily="{StaticResource LatoBlack}" FontSize="12" Text="AFVIS" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <DataTrigger Binding="{Binding IsTreated}" Value="True">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--Close next button-->
    <Style TargetType="{x:Type Button}" x:Key="CloseNextVisitationButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource RedColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" CornerRadius="2">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" Opacity="0.4" />
                        </Border.Effect>
                        <TextBlock FontFamily="{StaticResource LatoBlack}" FontSize="12" Text="NEJ" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
            <DataTrigger Binding="{Binding IsTreated}" Value="True">
                <Setter Property="Visibility" Value="Hidden" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!-- Next button -->
    <Style TargetType="{x:Type Button}" x:Key="NextButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource TealColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" CornerRadius="2">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" Opacity="0.4" />
                        </Border.Effect>
                        <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="{StaticResource LatoBlack}" FontSize="12" Text="JA" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Close Search Button -->

    <Style TargetType="{x:Type Button}" x:Key="CloseSearch" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource RedColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />


        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{StaticResource PrimaryColorBrush}" CornerRadius="12" Height="24" Width="24">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="1" Opacity="0.4" />
                        </Border.Effect>
                        <TextBlock FontFamily="{StaticResource MaterialIcon}" Text="&#xf136;" FontSize="12" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>

    </Style>


    <!--Save button-->
    <Style TargetType="{x:Type Button}" x:Key="SaveButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColorBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            BorderThickness="1" BorderBrush="{StaticResource BackgroundColorBrush}" CornerRadius="1" >
                        <TextBlock FontFamily="{StaticResource LatoBold}" FontSize="12" Text="GEM" HorizontalAlignment="Center" VerticalAlignment="Center"/>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Close Note button-->
    <Style TargetType="{x:Type Button}" x:Key="CloseNoteButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColorBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            BorderThickness="1" BorderBrush="{StaticResource BackgroundColorBrush}" CornerRadius="1" >
                        <TextBlock FontFamily="{StaticResource LatoBold}" FontSize="12" Text="AFSLUT"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Postpone button-->
    <Style TargetType="{x:Type Button}" x:Key="PostponeButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColorBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            BorderThickness="1" BorderBrush="{StaticResource BackgroundColorBrush}" CornerRadius="1" >
                        <TextBlock FontFamily="{StaticResource LatoBold}" FontSize="12" Text="UDSÆT"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!--Show button-->
    <Style TargetType="{x:Type Button}" x:Key="ShowButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColorBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            BorderThickness="1" BorderBrush="{StaticResource BackgroundColorBrush}" CornerRadius="1" >
                        <TextBlock FontFamily="{StaticResource LatoBold}" FontSize="12" Text="VIS"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--Call button-->
    <Style TargetType="{x:Type Button}" x:Key="CallButton" BasedOn="{StaticResource BaseStyle}">
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="Background" Value="{StaticResource PrimaryColorBrush}" />
        <Setter Property="Foreground" Value="{StaticResource BackgroundColorBrush}" />
        <Setter Property="BorderBrush" Value="{StaticResource BackgroundColorBrush}" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}"
                            BorderThickness="1" BorderBrush="{StaticResource BackgroundColorBrush}" CornerRadius="1" >
                        <TextBlock FontFamily="{StaticResource LatoBold}" FontSize="12" Text="RING"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="Hand" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
</ResourceDictionary>